{"version":3,"sources":["images/status-code-SUCCESS.svg","images/status-code-CLIENT_ERROR.svg","images/status-code-LOADING-black.svg","images/logo.svg","images/edit.svg","images/plus.svg","images/trash.svg","images/close.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ButtonClose.js","components/Popups/ImageZoom.js","components/Form.js","components/Popups/FormPopup.js","components/Popups/Confirm.js","components/Popups/EditProfile.js","components/Popups/EditAvatar.js","components/Popups/AddPlace.js","components/Spinner.js","utils/constants.js","utils/API.js","components/Entrance.js","components/Login.js","components/MenuMobile.js","components/Register.js","components/ProtectedRoute.js","components/Popups/InfoTooltip.js","errors/BadRequestError.js","errors/UnauthorizedError.js","utils/auth.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","pathname","useLocation","linkText","linkPath","className","src","logo","alt","loggedIn","email","onClick","signOut","classHeaderMenu","showMenu","to","CurrentUserContext","React","createContext","Card","card","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onCardZoom","type","onCardDelete","trash","onCardLike","length","Main","onEditAvatar","onKeyDown","avatar","onEditProfile","edit","about","onAddCard","plus","cards","map","key","Footer","ButtonClose","closeHandler","close","ImageZoom","isOpen","image","onClose","Form","classTitle","entrance","classButton","isDisabled","classPosition","classContainer","title","noValidate","children","infoTooltip","onSubmit","submitName","entranceText","path","entranceLinkText","FormPopup","isPopup","Confirm","evt","preventDefault","EditProfile","useState","setName","classInput","classError","errorMessage","nameError","setNameError","description","setDescription","descriptionError","setDescriptionError","isFormValid","setIsFormValid","useEffect","isPopupLoading","onUpdateUser","id","maxLength","pattern","placeholder","value","onChange","target","validity","valid","validationMessage","required","minLength","EditAvatar","avatarRef","useRef","urlError","setUrlError","current","onUpdateAvatar","ref","AddPlace","setLink","linkError","setLinkError","isNameValid","setIsNameValid","isLinkValid","setIsLinkValid","onAddCardSubmit","Spinner","BASE_URL","api","options","this","_baseUrl","baseUrl","_authorization","authorization","url","params","fetch","then","res","ok","json","Promise","reject","Error","status","_fetch","method","headers","body","JSON","stringify","cardId","cardID","like","Entrance","setEmail","emailError","setEmailError","passwordError","setPasswordError","password","setPassword","emailValid","setEmailValid","passwordValid","setPasswordValid","inputPasswordType","setInputPasswordType","formName","Login","onLogin","cleanCodeStatusInfo","MenuMobile","isShowMenu","Register","onRegister","ProtectedRoute","Component","component","InfoTooltip","codeStatusInfo","iconStatus","text","BadRequestError","message","getContent","token","Authorization","err","UnauthorizedError","data","App","setCurrentUser","setCards","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","isLoading","setIsLoading","setIsPopupLoading","dataImage","setDataImage","selectedCard","setSelectedCard","cardDelete","setCardDelete","setLoggedIn","isInfoTooltipOpen","setInfoTooltipOpen","loading","setCodeStatusInfo","setIsShowMenu","setClassHeaderMenu","location","history","useHistory","closeAllPopups","handleEsc","handleSignOut","localStorage","removeItem","push","jwt","getItem","auth","catch","console","log","all","getInitialUserInfo","getInitialCards","initialUserInfo","initialCards","window","addEventListener","removeEventListener","Provider","locaction","exact","changeLikeCardStatus","newCard","newCards","c","emailUser","setItem","escape","success","clientError","error","editUserAvatar","user","finally","editUserInfo","postUserCard","deleteCard","filter","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ea5db38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/status-code-SUCCESS.7fc4c149.svg\";","module.exports = __webpack_public_path__ + \"static/media/status-code-CLIENT_ERROR.c32299fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/status-code-LOADING-black.4f68ddc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9d0e3a93.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.a41c84ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.3742cf7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.9c3b03ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.c2d0901f.svg\";","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport logo from '../images/logo.svg';\n\nfunction Header(props) {\n  // Открыть/закрыть email пользователя в мобильной версии\n  function openAuthInfo() {\n    props.showMenu('mobile_position1');\n  }\n\n  const { pathname } = useLocation();\n  const linkText = `${pathname === '/sign-in' ? 'Регистрация' : 'Войти'}`;\n  const linkPath = `${pathname === '/sign-in' ? '/sign-up' : '/sign-in'}`;\n\n  return (\n\n      <header className='header__position'>\n        <div className='header'>\n          <img src={logo} alt='Логотип «Mesto Russia»' className='header__logo'/>\n          {props.loggedIn\n            ? (<>\n                <div className='header__info-desktop'>\n                  <span>{props.email}</span>\n                  <button className='button link header__link' onClick={props.signOut}>Выйти</button>\n                </div>\n\n                <button\n                  className={`header__menu  ${props.classHeaderMenu}`}\n                  onClick={openAuthInfo}\n                >\n                  <span/>\n                </button>\n\n              </>\n            )\n            : (<Link to={linkPath} className=\"button link header__link\">{linkText}</Link>)\n          }\n        </div>\n      </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext(null);\r\n\r\nexport { CurrentUserContext as default };\r\n","import React from 'react';\r\nimport trash from '../images/trash.svg';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const { card } = props;\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `button card__button-delete ${isOwn ? '' : 'card__button-delete_invisible'}`\r\n  );\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (\r\n    `button card__button-like ${isLiked ? 'card__button-like_solid' : ''}`\r\n  );\r\n\r\n  const handleZoomClick = () => {\r\n    props.onCardZoom(card);\r\n  };\r\n\r\n  const handleLikeClick = () => {\r\n    props.onCardLike(card);\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    props.onCardDelete(card);\r\n  };\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <img src={card.link} alt={card.name} className=\"card__image\" onClick={handleZoomClick}/>\r\n      <button className={cardDeleteButtonClassName} type=\"submit\" onClick={handleDeleteClick}>\r\n        <img alt=\"Удалить\" className=\"card__button-delete-vector\" src={trash}/>\r\n      </button>\r\n      <div className=\"card__description\">\r\n        <h2 className=\"card__name\">{card.name}</h2>\r\n        <div className=\"card__likes-container\">\r\n          <button className={cardLikeButtonClassName} type=\"submit\" onClick={handleLikeClick}/>\r\n          <p className=\"card__count-likes\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport edit from '../images/edit.svg';\r\nimport plus from '../images/plus.svg';\r\nimport Card from './Card';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__position\">\r\n\r\n          <button className=\"button profile__avatar-edit\" type=\"button\" onClick={props.onEditAvatar}\r\n                  onKeyDown={props.onEditAvatar}>\r\n            <img src={currentUser.avatar} alt={currentUser.name} className=\"profile__avatar-image\"/>\r\n          </button>\r\n\r\n          <div className=\"profile__user-info\">\r\n            <div className=\"profile__name-edit-position\">\r\n              <h1 className=\"profile__user-info-name\">{currentUser.name}</h1>\r\n              <button className=\"button profile__button-edit\" type=\"button\" onClick={props.onEditProfile}\r\n                      onKeyDown={props.onEditProfile}>\r\n                <img\r\n                  alt=\"Редактировать профиль\"\r\n                  className=\"profile__button-edit-vector\"\r\n                  src={edit}/>\r\n              </button>\r\n            </div>\r\n            <p className=\"profile__user-info-about\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"button profile__button-add\"\r\n          type=\"button\"\r\n          onClick={props.onAddCard}\r\n          onKeyDown={props.onAddCard}\r\n        >\r\n          <img\r\n            alt=\"Добавить карточку\"\r\n            className=\"profile__button-add-vector\"\r\n            src={plus}\r\n          />\r\n        </button>\r\n      </section>\r\n\r\n      <ul className=\"card-container\">\r\n        {props.cards.map((card) => <Card\r\n            key={card._id}\r\n            card={card}\r\n            onCardLike={props.onCardLike}\r\n            onCardZoom={props.onCardZoom}\r\n            onCardDelete={props.onCardDelete}\r\n          />)}\r\n      </ul>\r\n\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer__position\">\r\n      <div className=\"footer\">\r\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport close from '../images/close.svg';\r\n\r\nfunction ButtonClose(props) {\r\n  return (\r\n    <img className=\"button popup__close\"\r\n         onClick={props.closeHandler}\r\n         src={close}\r\n         alt=\"Закрыть\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ButtonClose;\r\n","import React from 'react';\r\nimport ButtonClose from '../ButtonClose';\r\n\r\nfunction ImageZoom(props) {\r\n  return (\r\n    <div className={`popup popup__closed popup__zoom-card ${props.isOpen && 'popup_opened'}`}>\r\n      <div className=\"popup__zoom\">\r\n        <img\r\n          src={props.image.link}\r\n          alt={props.image.name}\r\n          className=\"popup__image\"/>\r\n        <ButtonClose closeHandler={props.onClose}/>\r\n        <h2 className=\"popup__card-name\">{props.image.name}</h2>\r\n      </div>\r\n      <div className=\"popup__overlay\" onClick={props.onClose}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageZoom;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ButtonClose from './ButtonClose';\n\nfunction Form(props) {\n  const classTitle = `${(props.entrance)\n    ? 'form__title'\n    : 'form__title form__title_popup'\n  }`;\n\n  const classButton = `button form__button\n  ${props.entrance\n    ? 'form__button_type_entrance'\n    : `form__button_type_popup ${props.isDisabled ? 'form__button_disabled' : ''}`\n}`;\n\n  const classPosition = `${props.entrance\n    ? 'form__position'\n    : 'form__position form__position_type_popup'}`;\n\n  const classContainer = `${props.entrance\n    ? 'form__container'\n    : 'form__container form__container_popup'}`;\n\n  return (\n\n    <div className={classContainer}>\n\n      {!props.entrance && <ButtonClose closeHandler={props.onClose}/>}\n\n      <h2 className={classTitle}>{props.title}</h2>\n      <form className={classPosition} name={props.name} noValidate>\n\n        {props.entrance\n          ? <div className=\"form__position_type_entrance\">{/* Обертка нужна, чтобы кнопка \"войти\" была подвижной */}\n            {props.children} {/* Здесь лежат \"инпуты\" */}\n          </div>\n          : <>\n            {props.children} {/* для попапов подвижность не нудна */}\n          </>\n        }\n\n        {/* Если у нас попап с советами, то нет кнопки \"отправить\" */}\n        {!props.infoTooltip\n        && (\n          <button type=\"submit\"\n                  className={classButton}\n                  onClick={props.onSubmit}>\n            {props.submitName}\n          </button>\n        )}\n\n      </form>\n\n      {/* ТЕКСТ под кнопкой \"отправить\" только для входа */}\n      {props.entrance\n      && (<span className='form__entrance-text'>\n        {props.entranceText}\n        <Link\n          to={props.path} className='link'>{props.entranceLinkText}\n        </Link>\n      </span>)\n      }\n\n    </div>\n\n  );\n}\n\nexport default Form;\n","import React from 'react';\r\nimport Form from '../Form';\r\n\r\nfunction FormPopup(props) {\r\n  return (\r\n    <div className={`popup popup__closed popup__${props.name} ${(props.isOpen) ? 'popup_opened' : ''}`}>\r\n        <Form\r\n          title={props.title}\r\n          name={props.name}\r\n          isDisabled={props.isDisabled}\r\n          onSubmit={props.onSubmit}\r\n          submitName={props.submitName}\r\n          children={props.children}\r\n          isPopup={true}\r\n          infoTooltip={props.infoTooltip}\r\n          onClose={props.onClose}\r\n        />\r\n\r\n      <div className=\"popup__overlay\" onClick={props.onClose}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormPopup;\r\n","import React from 'react';\nimport FormPopup from './FormPopup';\n\nfunction Confirm(props) {\n  const handleCardDelete = (evt) => {\n    evt.preventDefault();\n    props.onCardDelete();\n  };\n\n  return (\n    <FormPopup\n      name=\"are-you-sure\"\n      title=\"Вы уверены?\"\n      submitName=\"Да\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleCardDelete}\n\n    />\n  );\n}\n\nexport default Confirm;\n","import React from 'react';\r\nimport FormPopup from './FormPopup';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\n\r\nfunction EditProfile(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [nameError, setNameError] = React.useState({\r\n    classInput: '',\r\n    classError: '',\r\n    errorMessage: '',\r\n  });\r\n\r\n  const [description, setDescription] = React.useState('');\r\n  const [descriptionError, setDescriptionError] = React.useState({\r\n    classInput: '',\r\n    classError: '',\r\n    errorMessage: '',\r\n  });\r\n\r\n  const [isFormValid, setIsFormValid] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n    setIsFormValid(true);\r\n    setNameError({\r\n      classInput: '',\r\n      classError: '',\r\n      errorMessage: '',\r\n    });\r\n    setDescriptionError({\r\n      classInput: '',\r\n      classError: '',\r\n      errorMessage: '',\r\n    });\r\n  }, [currentUser, props.isOpen]);\r\n\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value);\r\n\r\n    if (!evt.target.validity.valid) {\r\n      setNameError({\r\n        classInput: 'form__input_error',\r\n        classError: 'form__error_visible',\r\n        errorMessage: evt.target.validationMessage,\r\n      });\r\n      setIsFormValid(false);\r\n    } else {\r\n      setNameError({\r\n        classInput: '',\r\n        classError: '',\r\n        errorMessage: '',\r\n      });\r\n      setIsFormValid(true);\r\n    }\r\n  }\r\n\r\n  function handleDescriptionChange(evt) {\r\n    setDescription(evt.target.value);\r\n\r\n    if (!evt.target.validity.valid) {\r\n      setDescriptionError({\r\n        classInput: 'form__input_error',\r\n        classError: 'form__error_visible',\r\n        errorMessage: evt.target.validationMessage,\r\n      });\r\n      setIsFormValid(false);\r\n    } else {\r\n      setDescriptionError({\r\n        classInput: '',\r\n        classError: '',\r\n        errorMessage: '',\r\n      });\r\n      setIsFormValid(true);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n    setIsFormValid(true);\r\n  }\r\n\r\n  return (\r\n    <FormPopup\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      name=\"profile\"\r\n      title=\"Редактировать профиль\"\r\n      isDisabled={!isFormValid}\r\n      submitName={props.isPopupLoading ? 'Сохранить...' : 'Сохранить'}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className=\"form__field form__field_type_popup\">\r\n        <input\r\n          className={`form__input form__input_type_popup ${nameError.classInput}`}\r\n          id=\"name\"\r\n          maxLength=\"40\"\r\n          name=\"name\"\r\n          pattern=\"[A-Za-zА-Яа-яЁё]*[A-Za-zА-Яа-яЁё]+[A-Za-zА-Яа-яЁё\\s\\-]*[A-Za-zА-Яа-яЁё]+[A-Za-zА-Яа-яЁё\\s]*\"\r\n          placeholder=\"Имя\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n          type=\"text\"\r\n          required\r\n        />\r\n        <span\r\n          className={`form__error ${nameError.classError}`}\r\n          id=\"about-error\"\r\n        >\r\n          {nameError.errorMessage}\r\n        </span>\r\n      </label>\r\n\r\n      <label className=\"form__field form__field_type_popup\">\r\n        <input\r\n          className={`form__input form__input_type_popup ${descriptionError.classInput}`}\r\n          id=\"about\"\r\n          maxLength=\"200\"\r\n          minLength=\"2\"\r\n          name=\"about\"\r\n          placeholder=\"О себе\"\r\n          value={description}\r\n          onChange={handleDescriptionChange}\r\n          type=\"text\"\r\n          required\r\n        />\r\n        <span\r\n          className={`form__error ${descriptionError.classError}`}\r\n          id=\"about-error\"\r\n        >\r\n          {descriptionError.errorMessage}\r\n        </span>\r\n      </label>\r\n\r\n    </FormPopup>\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","import React from 'react';\r\nimport FormPopup from './FormPopup';\r\n\r\nfunction EditAvatar(props) {\r\n  const avatarRef = React.useRef();\r\n\r\n  const [urlError, setUrlError] = React.useState({\r\n    classInput: '',\r\n    classError: '',\r\n    errorMessage: '',\r\n  });\r\n\r\n  const [isFormValid, setIsFormValid] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setUrlError({\r\n      classInput: '',\r\n      classError: '',\r\n      errorMessage: '',\r\n    });\r\n    setIsFormValid(false);\r\n    avatarRef.current.value = '';\r\n  }, [props.isOpen]);\r\n\r\n  function handleChange() {\r\n    const avatar = avatarRef.current;\r\n\r\n    if (!avatar.validity.valid) {\r\n      setUrlError({\r\n        classInput: 'form__input_error',\r\n        classError: 'form__error_visible',\r\n        errorMessage: avatar.validationMessage,\r\n      });\r\n      setIsFormValid(false);\r\n    } else {\r\n      setUrlError({\r\n        classInput: '',\r\n        classError: '',\r\n        errorMessage: '',\r\n      });\r\n      setIsFormValid(true);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateAvatar({\r\n      avatar: avatarRef.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <FormPopup\r\n      name=\"avatar\"\r\n      title=\"Обновить аватар\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      isDisabled={!isFormValid}\r\n      submitName={props.isPopupLoading ? 'Сохранить...' : 'Сохранить'}\r\n    >\r\n      <label className=\"form__field form__field_type_popup\">\r\n        <input\r\n          className={`form__input form__input_type_popup  ${urlError.classInput}`}\r\n          id=\"link-avatar\"\r\n          ref={avatarRef}\r\n          onChange={handleChange}\r\n          name=\"avatar\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          required\r\n          type=\"url\"\r\n        />\r\n        <span\r\n          className={`form__error ${urlError.classError}`}\r\n          id=\"link-avatar-error\"\r\n        >\r\n          {urlError.errorMessage}\r\n          </span>\r\n      </label>\r\n\r\n    </FormPopup>\r\n  );\r\n}\r\n\r\nexport default EditAvatar;\r\n","import React from 'react';\r\nimport FormPopup from './FormPopup';\r\n\r\nfunction AddPlace(props) {\r\n  const [name, setName] = React.useState('');\r\n  const [nameError, setNameError] = React.useState({\r\n    classInput: '',\r\n    classError: '',\r\n    errorMessage: '',\r\n  });\r\n  const [link, setLink] = React.useState('');\r\n  const [linkError, setLinkError] = React.useState({\r\n    classInput: '',\r\n    classError: '',\r\n    errorMessage: '',\r\n  });\r\n\r\n  const [isNameValid, setIsNameValid] = React.useState(false);\r\n  const [isLinkValid, setIsLinkValid] = React.useState(false);\r\n  const [isFormValid, setIsFormValid] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (isNameValid && isLinkValid) setIsFormValid(true);\r\n\r\n    return () => {\r\n      setIsFormValid(false);\r\n    };\r\n  }, [isNameValid, isLinkValid]);\r\n\r\n  React.useEffect(() => {\r\n    setNameError({\r\n      classInput: '',\r\n      classError: '',\r\n      errorMessage: '',\r\n    });\r\n    setLinkError({\r\n      classInput: '',\r\n      classError: '',\r\n      errorMessage: '',\r\n    });\r\n    setName('');\r\n    setLink('');\r\n    setIsNameValid(false);\r\n    setIsLinkValid(false);\r\n  }, [props.isOpen]);\r\n\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value);\r\n\r\n    if (!evt.target.validity.valid) {\r\n      setNameError({\r\n        classInput: 'form__input_error',\r\n        classError: 'form__error_visible',\r\n        errorMessage: evt.target.validationMessage,\r\n      });\r\n      setIsNameValid(false);\r\n    } else {\r\n      setNameError({\r\n        classInput: '',\r\n        classError: '',\r\n        errorMessage: '',\r\n      });\r\n      setIsNameValid(true);\r\n    }\r\n  }\r\n\r\n  function handleLinkChange(evt) {\r\n    setLink(evt.target.value);\r\n\r\n    if (!evt.target.validity.valid) {\r\n      setLinkError({\r\n        classInput: 'form__input_error',\r\n        classError: 'form__error_visible',\r\n        errorMessage: evt.target.validationMessage,\r\n      });\r\n      setIsLinkValid(false);\r\n    } else {\r\n      setLinkError({\r\n        classInput: '',\r\n        classError: '',\r\n        errorMessage: '',\r\n      });\r\n      setIsLinkValid(true);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onAddCardSubmit({\r\n      name,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <FormPopup\r\n      name=\"add-place\"\r\n      title=\"Новое место\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      submitName={props.isPopupLoading ? 'Создать...' : 'Создать'}\r\n      isDisabled={!isFormValid}\r\n    >\r\n      <label className=\"form__field form__field_type_popup\">\r\n        <input\r\n          className={`form__input form__input_type_popup ${nameError.classInput}`}\r\n          id=\"name-card\"\r\n          maxLength=\"30\"\r\n          minLength=\"2\"\r\n          name=\"title\"\r\n          placeholder=\"Название\"\r\n          required\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleNameChange}/>\r\n        <span\r\n          className={`form__error ${nameError.classError}`}\r\n          id=\"about-error\"\r\n        >\r\n          {nameError.errorMessage}\r\n        </span>\r\n      </label>\r\n      <label className=\"form__field form__field_type_popup\">\r\n        <input\r\n          className={`form__input form__input_type_popup ${linkError.classInput}`}\r\n          id=\"link\"\r\n          name=\"src\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          required\r\n          type=\"url\"\r\n          value={link}\r\n          onChange={handleLinkChange}/>\r\n        <span\r\n          className={`form__error ${linkError.classError}`}\r\n          id=\"about-error\"\r\n        >\r\n          {linkError.errorMessage}\r\n        </span>\r\n      </label>\r\n    </FormPopup>\r\n  );\r\n}\r\n\r\nexport default AddPlace;\r\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className='spinner__position'>\n      <div className=\"spinner\" />\n    </div>\n  );\n}\n\nexport default Spinner;\n","export const baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-12';\r\nexport const authorization = '2ecad59e-1d15-4621-aac6-769c45c3d932';\r\n\r\nexport const BASE_URL = 'https://auth.nomoreparties.co';\r\n","import {\r\n  authorization,\r\n  baseUrl,\r\n} from './constants';\r\n\r\nclass API {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._authorization = options.authorization;\r\n  }\r\n\r\n  // не получается убрать ошибку линтинга\r\n  // class API {\r\n  //   constructor({ baseUrl, authorization }) {\r\n  //     this._baseUrl = baseUrl;\r\n  //     this._authorization = authorization;\r\n  // }\r\n\r\n  _fetch(url, params) {\r\n    return fetch(this._baseUrl + url, params)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(new Error(`Ну вот, все пропало (Ошибка: ${res.status})`));\r\n      });\r\n  }\r\n\r\n  getInitialUserInfo() {\r\n    return this._fetch('/users/me', {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    });\r\n  }\r\n\r\n  editUserInfo({ name, about }) {\r\n    return this._fetch('/users/me', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._authorization,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name, about }),\r\n    });\r\n  }\r\n\r\n  editUserAvatar({ avatar }) {\r\n    return this._fetch('/users/me/avatar', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._authorization,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        avatar,\r\n      }),\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return this._fetch('/cards', {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    });\r\n  }\r\n\r\n  postUserCard({ name, link }) {\r\n    return this._fetch('/cards', {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._authorization,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name, link }),\r\n    });\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return this._fetch(`/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    });\r\n  }\r\n\r\n  changeLikeCardStatus(cardID, like) {\r\n    return this._fetch(`/cards/likes/${cardID}`, {\r\n      method: like ? 'PUT' : 'DELETE',\r\n      headers: {\r\n        authorization: this._authorization,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new API({ baseUrl, authorization });\r\n\r\nexport default api;\r\n","import React from 'react';\nimport Form from './Form';\n\nfunction Entrance(props) {\n  const [email, setEmail] = React.useState('');\n  const [emailError, setEmailError] = React.useState({\n    classInput: '',\n    classError: '',\n    errorMessage: '',\n  });\n\n  const [passwordError, setPasswordError] = React.useState({\n    classInput: '',\n    classError: '',\n    errorMessage: '',\n  });\n\n  const [password, setPassword] = React.useState('');\n  const [emailValid, setEmailValid] = React.useState(false);\n  const [passwordValid, setPasswordValid] = React.useState(false);\n  const [isFormValid, setIsFormValid] = React.useState(false);\n  const [inputPasswordType, setInputPasswordType] = React.useState('password');\n\n  React.useEffect(() => {\n    if (emailValid && passwordValid) setIsFormValid(true);\n\n    return () => {\n      setIsFormValid(false);\n    };\n  }, [emailValid, passwordValid]);\n\n  function handleEmailChange(evt) {\n    setEmail(evt.target.value);\n\n    if (!evt.target.validity.valid) {\n      setEmailError({\n        classInput: 'form__input_error',\n        classError: 'form__error_visible',\n        errorMessage: evt.target.validationMessage,\n      });\n      setEmailValid(false);\n    } else {\n      setEmailError({\n        classInput: '',\n        classError: '',\n        errorMessage: '',\n      });\n      setEmailValid(true);\n    }\n  }\n\n  function handlePasswordChange(evt) {\n    setPassword(evt.target.value);\n\n    if (!evt.target.validity.valid) {\n      setPasswordError({\n        classInput: 'form__input_error',\n        classError: 'form__error_visible',\n        errorMessage: evt.target.validationMessage,\n      });\n      setPasswordValid(false);\n    } else {\n      setPasswordError({\n        classInput: '',\n        classError: '',\n        errorMessage: '',\n      });\n      setPasswordValid(true);\n    }\n  }\n\n  function onSubmit(evt) {\n    evt.preventDefault();\n    if (!email && !password) return;\n    props.onSubmit(password, email);\n    setPassword('');\n  }\n\n  function handleShowPassword() {\n    if (inputPasswordType === 'password') {\n      setInputPasswordType('text');\n    } else {\n      setInputPasswordType('password');\n    }\n  }\n\n  return (\n\n    <div className=\"entrance\">\n      <Form\n        formName='entrance'\n        title={props.title}\n        submitName={props.submitName}\n        entrance={true}\n        onSubmit={onSubmit}\n        path={props.path}\n        entranceText={props.entranceText}\n        entranceLinkText={props.entranceLinkText}\n        isDisabled={!isFormValid}\n      >\n        <label className=\"form__field form__field_type_entrance\">\n          <input\n            name='email'\n            className={`form__input form__input_type_entrance ${emailError.classInput}`}\n            id=\"name-card\"\n            placeholder=\"Email\"\n            required\n            type='email'\n            value={email}\n            onChange={handleEmailChange}\n          />\n          <span\n            className={`form__error ${emailError.classError}`}\n            id=\"about-error\"\n          >\n          {emailError.errorMessage}\n          </span>\n        </label>\n        <label className=\"form__field form__field_type_entrance\">\n          <input\n            className={`form__input form__input_type_entrance ${passwordError.classInput}`}\n            onChange={handlePasswordChange}\n            type={inputPasswordType}\n            id='password'\n            name='password'\n            value={password}\n            placeholder='Пароль'\n            minLength='4'\n            maxLength='30'\n            required\n          />\n          <button\n            type='button'\n            className={`button form__input-password form__input-password_type_${inputPasswordType} `}\n            onClick={handleShowPassword}\n            onKeyDown={(evt) => evt.preventDefault}/>\n          <span\n            className={`form__error ${passwordError.classError}`}\n            id=\"about-error\"\n          >\n          {passwordError.errorMessage}\n            </span>\n        </label>\n      </Form>\n    </div>\n  );\n}\n\nexport default Entrance;\n","import React from 'react';\nimport Entrance from './Entrance';\n\nfunction Login(props) {\n  function submitForm(password, email) {\n    props.onLogin(password, email);\n  }\n\n  return (\n    <Entrance\n      submitName=\"Войти\"\n      title=\"Вход\"\n      entranceText='Ещё не зарегистрированы? '\n      entranceLinkText='Регистрация'\n      path='/sign-up'\n      onSubmit={submitForm}\n      cleanCodeStatusInfo={props.cleanCodeStatusInfo}\n    />\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\nfunction MenuMobile(props) {\n  return (\n    <div className={`menu-mobile__position ${props.isShowMenu}`}>\n      <menu className='menu-mobile'>\n        <span>{props.email}</span>\n        <button className='button link header__link menu-mobile__exit' onClick={props.signOut}>Выйти</button>\n      </menu>\n    </div>\n  );\n}\n\nexport default MenuMobile;\n","import React from 'react';\r\nimport Entrance from './Entrance';\r\n\r\nfunction Register(props) {\r\n  function submitForm(password, email) {\r\n    props.onRegister(password, email);\r\n  }\r\n\r\n  return (\r\n    <Entrance\r\n      submitName=\"Зарегистрироваться\"\r\n      title=\"Регистрация\"\r\n      entranceText='Уже зарегистрированы? '\r\n      entranceLinkText='Войти'\r\n      onSubmit={submitForm}\r\n      path='/sign-in'\r\n    />\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => (\r\n  <Route>\r\n    {\r\n      () => (props.loggedIn ? <Component {...props} /> : <Redirect to='/sign-in' />)\r\n    }\r\n  </Route>\r\n);\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\nimport FormPopup from './FormPopup';\n\nfunction InfoTooltip(props) {\n  return (\n    <FormPopup\n      name=\"info-tooltip\"\n      formName='infoTooltip'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      loggedIn={props.loggedIn}\n      infoTooltip={true}\n    >\n      <img src={props.codeStatusInfo.iconStatus} alt='Иконка с ответом сервера' className='form__icon'/>\n      <div className='form__position-title-popup-info'>\n        <p className='form__title'>{props.codeStatusInfo.text}</p>\n      </div>\n    </FormPopup>\n  );\n}\n\nexport default InfoTooltip;\n","class BadRequestError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.status = 400;\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nexport default BadRequestError;\r\n","class BadRequestError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.status = 401;\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nexport default BadRequestError;\r\n","import BadRequestError from '../errors/BadRequestError';\nimport UnauthorizedError from '../errors/UnauthorizedError';\nimport { BASE_URL } from './constants';\n\nexport const register = (password, email) => fetch(`${BASE_URL}/signup`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ password, email }),\n})\n  .then((res) => {\n    if (!res.ok) {\n      return res.json()\n        .then((err) => {\n          if (err.error) {\n            throw new BadRequestError(err.error);\n          } else {\n            throw new BadRequestError(err.message);\n          }\n        });\n    }\n    return res.json();\n  });\n\nexport const authorize = (password, email) => fetch(`${BASE_URL}/signin`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ password, email }),\n})\n  .then((res) => {\n    if (res.status === 400) {\n      throw new BadRequestError('Не передано одно из полей');\n    } else if (res.status === 401) {\n      throw new UnauthorizedError('Пользователь с таким email не найден');\n    }\n    return res.json();\n  })\n  // eslint-disable-next-line consistent-return\n  .then((data) => {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n\n      return data.token;\n    }\n  });\n\nexport const getContent = (token) => fetch(`${BASE_URL}/users/me`, {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n})\n  .then((res) => {\n    if (!res.ok) {\n      return res.json()\n        .then((err) => {\n          throw new UnauthorizedError(err.message);\n        });\n    }\n    return res.json();\n  })\n  .then((data) => data);\n","import React from 'react';\nimport {\n  Route, Switch, useLocation, Redirect, useHistory,\n} from 'react-router-dom';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImageZoom from './Popups/ImageZoom';\nimport Confirm from './Popups/Confirm';\nimport EditProfile from './Popups/EditProfile';\nimport EditAvatar from './Popups/EditAvatar';\nimport AddPlace from './Popups/AddPlace';\nimport Spinner from './Spinner';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport api from '../utils/API';\nimport Login from './Login';\nimport MenuMobile from './MenuMobile';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './Popups/InfoTooltip';\nimport * as auth from '../utils/auth';\n\nimport success from '../images/status-code-SUCCESS.svg';\nimport clientError from '../images/status-code-CLIENT_ERROR.svg';\nimport loading from '../images/status-code-LOADING-black.svg';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    avatar: '',\n    about: '',\n    _id: '',\n  });\n  const [cards, setCards] = React.useState([]);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isPopupLoading, setIsPopupLoading] = React.useState(false);\n\n  const [dataImage, setDataImage] = React.useState({\n    link: '',\n    name: '',\n  });\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [cardDelete, setCardDelete] = React.useState({});\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = React.useState(false);\n  const [codeStatusInfo, setCodeStatusInfo] = React.useState({\n    iconStatus: loading,\n    text: 'Загрузка...',\n  });\n\n  const [isShowMenu, setIsShowMenu] = React.useState('menu-mobile_type_close');\n  const [classHeaderMenu, setClassHeaderMenu] = React.useState('header__menu_type_closed');\n  const location = useLocation();\n  const history = useHistory();\n\n  // Проверить токен\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth.getContent(jwt)\n        .then((res) => {\n          setLoggedIn(true);\n          setEmail(res.data.email);\n          history.push('/');\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [history]);\n\n  function cleanCodeStatusInfo() {\n    setCodeStatusInfo(\n      {\n        iconStatus: loading,\n        text: 'Загрузка...',\n      },\n    );\n  }\n\n  function handleRegister(password, emailUser) {\n    cleanCodeStatusInfo();\n\n    auth.register(escape(password), emailUser)\n      .then(() => {\n        setCodeStatusInfo({ iconStatus: success, text: 'Регистрация прошла успешно!' });\n      })\n      .catch((err) => setCodeStatusInfo({ iconStatus: clientError, text: err.message }));\n    setInfoTooltipOpen(true);\n  }\n\n  function handleLogin(password, emailUser) {\n    cleanCodeStatusInfo();\n\n    auth.authorize(escape(password), emailUser)\n      .then((data) => {\n        auth.getContent(data)\n          .then((res) => {\n            setEmail(res.data.email);\n          })\n          .catch((err) => console.log(err));\n        setLoggedIn(true);\n        setCodeStatusInfo({ iconStatus: success, text: 'Вход выполнен!' });\n        history.push('/');\n      })\n\n      .catch((err) => setCodeStatusInfo({ iconStatus: clientError, text: err.message }));\n    setInfoTooltipOpen(true);\n  }\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    Promise.all([api.getInitialUserInfo(), api.getInitialCards()])\n      .then(([initialUserInfo, initialCards]) => {\n        setCurrentUser(initialUserInfo);\n        setCards(initialCards);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(`Данные пользователя и карточки не прогрузились. ${err}`));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleDeleteCardClick(card) {\n    setCardDelete(card);\n    setIsConfirmPopupOpen(true);\n  }\n\n  function handleCardZoom(props) {\n    setSelectedCard(true);\n    setDataImage({ link: props.link, name: props.name });\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard(false);\n    setInfoTooltipOpen(false);\n  }\n\n  function handleEsc(evt) {\n    if (evt.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  });\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        // Обновляем стейт\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(`Не удалось поставить лайк. ${err}`);\n      });\n  }\n\n  function handleCardDelete() {\n    api.deleteCard(cardDelete._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== cardDelete._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка при удалении карточки. ${err}`);\n      });\n  }\n\n  function handleUpdateUser({ name, about }) {\n    setIsPopupLoading(true);\n    return api.editUserInfo({ name, about })\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка обновлении информации о пользователе. ${err}`))\n      .finally(() => {\n        setIsPopupLoading(false);\n      });\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    setIsPopupLoading(true);\n    return api.editUserAvatar({ avatar })\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => console.error(`Ошибка при обновлении аватара. ${err}`))\n      .finally(() => {\n        setIsPopupLoading(false);\n      });\n  }\n\n  const handleAddPlaceSubmit = ({ name, link }) => {\n    setIsPopupLoading(true);\n    return api.postUserCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка при добавлении карточки. ${err}`))\n      .finally(() => {\n        setIsPopupLoading(false);\n      });\n  };\n\n  function handleSignOut() {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    setEmail('');\n    history.push('/sign-in');\n  }\n\n  function showMenu() {\n    if (isShowMenu === 'menu-mobile_type_close') {\n      setIsShowMenu('menu-mobile_type_open');\n    } else {\n      setIsShowMenu('menu-mobile_type_close');\n    }\n\n    if (classHeaderMenu === 'header__menu_type_opened') {\n      setClassHeaderMenu('header__menu_type_closed');\n    } else {\n      setClassHeaderMenu('header__menu_type_opened');\n    }\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      {loggedIn\n      && < MenuMobile\n        email={email}\n        signOut={handleSignOut}\n        isShowMenu={isShowMenu}\n      />\n      }\n      <Header\n        loggedIn={loggedIn}\n        locaction={location}\n        email={email}\n        signOut={handleSignOut}\n        showMenu={showMenu}\n        classHeaderMenu={classHeaderMenu}\n      />\n      <Switch>\n        {isLoading\n          ? <Spinner/>\n          : <ProtectedRoute exact path=\"/\"\n                            loggedIn={loggedIn}\n                            component={Main}\n                            onEditAvatar={handleEditAvatarClick}\n                            onEditProfile={handleEditProfileClick}\n                            onAddCard={handleAddCardClick}\n                            onCardZoom={handleCardZoom}\n                            onCardDelete={handleDeleteCardClick}\n                            onCardLike={handleCardLike}\n                            cards={cards}\n          />\n        }\n        <Route path='/sign-in'>\n          <Login onLogin={handleLogin}/>\n        </Route>\n\n        <Route path='/sign-up'>\n          <Register onRegister={handleRegister}/>\n        </Route>\n\n        <Route>\n          {loggedIn ? <Redirect to=\"/\"/> : <Redirect to=\"/sign-in\"/>}\n        </Route>\n      </Switch>\n\n      <Footer/>\n\n      <EditAvatar\n        isOpen={isEditAvatarPopupOpen}\n        isPopupLoading={isPopupLoading}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n\n      <EditProfile\n        isOpen={isEditProfilePopupOpen}\n        isPopupLoading={isPopupLoading}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n\n      <AddPlace\n        isOpen={isAddCardPopupOpen}\n        isPopupLoading={isPopupLoading}\n        onClose={closeAllPopups}\n        onAddCardSubmit={handleAddPlaceSubmit}\n      />\n\n      <Confirm\n        isOpen={isConfirmPopupOpen}\n        onClose={closeAllPopups}\n        onCardDelete={handleCardDelete}\n      />\n\n      <InfoTooltip\n        isOpen={isInfoTooltipOpen}\n        onClose={closeAllPopups}\n        loggedIn={loggedIn}\n        codeStatusInfo={codeStatusInfo}\n      />\n\n      <ImageZoom\n        isOpen={selectedCard}\n        onClose={closeAllPopups}\n        image={dataImage}\n      />\n\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}